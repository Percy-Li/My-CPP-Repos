解法一：
#include <iostream>
using namespace std;

int P(int);
int main()
{
    int n, a;
    a = 0;
    cin >> n;
    for (int i = 1; i < n; i++)
    {
        for (int m = 1; m < n; m++)
        {
            if (P(i) == m)
                a++;
        }
    }
    cout << a;
    return 0;
}
int P(int m)
{
    int i;
    for (i = 2; i <= m - 1; i++)
        if (m % i == 0)
            return 0;
    return m;
}
//时间复杂度为O(n^2)
解法二：
#include <iostream>
using namespace std;

int main()
{
    int n, m = 0;
    cin >> n;
    int i, j, a[9999];
    a[0] = 0;
    a[1] = 0;
    for (i = 2; i <= n; i++)
    {
        a[i] = 1;
    }
    for (i = 2; i<=n; i++)
    {
        if (a[i])
            for (j = 2 * i; j <= n; j += i)
                a[j] = 0;
    }
    for (i = 2; i <= n; i++)
    {
        if (a[i] == 1)
            m++;
    }
    cout << m;
}
//时间复杂度为O(n^2)

